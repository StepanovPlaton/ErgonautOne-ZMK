#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        Symbols {
            if-layers = <1 4>;
            then-layer = <2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none  &kp Q  &kp W  &kp E         &kp R        &kp T               &kp Y            &kp U            &kp I                &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D         &kp F        &mt LEFT_ALT G      &kp H            &kp J            &kp K                &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C         &kp V        &kp B               &kp N            &kp M            &kp COMMA            &kp DOT  &kp FSLH  &none
                     &kp LEFT_ALT  &lt 1 SPACE  &mt LEFT_SHIFT TAB  &mt LCTRL ENTER  &lt 4 BACKSPACE  &mt LEFT_WIN DELETE
            >;
        };

        Up {
            bindings = <
&none  &none  &none  &kp C_NEXT        &kp C_VOLUME_UP    &to 5   &kp INSERT      &kp LA(TAB)     &kp LC(C)       &kp LC(V)     &kp LC(Z)        &none
&none  &none  &none  &kp C_PLAY_PAUSE  &kp C_MUTE         &none   &kp CAPSLOCK    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none  &none  &none  &kp C_PREV        &kp C_VOLUME_DOWN  &none   &kp SCROLLLOCK  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none
                     &trans            &trans             &trans  &kp LEFT_SHIFT  &trans          &trans
            >;
        };

        Lower {
            bindings = <
&none  &kp LEFT_BRACE        &kp N7  &kp N8  &kp N9  &kp RIGHT_BRACE        &kp CARET        &kp AMPERSAND     &kp PIPE   &kp PERCENT  &kp DOLLAR    &none
&none  &kp LEFT_PARENTHESIS  &kp N4  &kp N5  &kp N6  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp SINGLE_QUOTE  &kp EQUAL  &kp MINUS    &kp ASTERISK  &none
&none  &kp LEFT_BRACKET      &kp N1  &kp N2  &kp N3  &kp RIGHT_BRACKET      &none            &kp GRAVE         &none      &kp HASH     &kp AT_SIGN   &none
                                     &kp N0  &trans  &kp LEFT_SHIFT         &trans           &trans            &trans
            >;
        };

        HLower {
            bindings = <
&none  &none  &kp F7  &kp F8  &kp F10  &none    &none  &none  &none  &none  &bt BT_SEL 0  &none
&none  &none  &kp F4  &kp F5  &kp F6   &kp F12  &none  &none  &none  &none  &bt BT_SEL 1  &none
&none  &none  &kp F1  &kp F2  &kp F3   &kp F11  &none  &none  &none  &none  &bt BT_CLR    &none
                      &none   &none    &none    &none  &none  &none
            >;
        };

        HGame {
            bindings = <
&to 0   &kp NUMBER_1  &trans  &kp NUMBER_3  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_2  &trans  &kp NUMBER_4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans  &kp NUMBER_5  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &trans        &trans  &trans  &trans  &trans  &trans
            >;
        };

        Game {
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E  &kp R        &kp T  &kp Y  &kp U  &kp I      &kp O    &kp P     &none
&kp LEFT_SHIFT    &kp A  &kp S  &kp D  &kp F        &kp G  &kp H  &kp J  &kp K      &kp L    &kp SEMI  &none
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C  &kp V        &kp B  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                                &none  &lt 4 SPACE  &none  &none  &none  &none
            >;
        };
    };
};
